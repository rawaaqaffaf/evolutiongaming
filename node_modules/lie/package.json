{
  "_args": [
    [
      {
        "raw": "lie@~3.3.0",
        "scope": null,
        "escapedName": "lie",
        "name": "lie",
        "rawSpec": "~3.3.0",
        "spec": ">=3.3.0 <3.4.0",
        "type": "range"
      },
      "C:\\Python27\\EvolutionGamingJS\\node_modules\\jszip"
    ]
  ],
  "_from": "lie@>=3.3.0 <3.4.0",
  "_id": "lie@3.3.0",
  "_inCache": true,
  "_location": "/lie",
  "_nodeVersion": "8.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/lie_3.3.0_1520348048303_0.9436495242094991"
  },
  "_npmUser": {
    "name": "cwmma",
    "email": "calvin.metcalf@gmail.com"
  },
  "_npmVersion": "5.7.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "lie@~3.3.0",
    "scope": null,
    "escapedName": "lie",
    "name": "lie",
    "rawSpec": "~3.3.0",
    "spec": ">=3.3.0 <3.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jszip"
  ],
  "_resolved": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
  "_shasum": "dcf82dee545f46074daf200c7c1c5a08e0f40f6a",
  "_shrinkwrap": null,
  "_spec": "lie@~3.3.0",
  "_where": "C:\\Python27\\EvolutionGamingJS\\node_modules\\jszip",
  "browser": {
    "./lib/index.js": "./lib/browser.js"
  },
  "bugs": {
    "url": "https://github.com/calvinmetcalf/lie/issues"
  },
  "contributors": [
    {
      "name": "Ruben Verborgh",
      "email": "ruben.verborgh@gmail.com"
    },
    {
      "name": "Calvin Metcalf",
      "email": "calvin.metcalf@gmail.com"
    },
    {
      "name": "Sam Hocevar",
      "email": "sam@hocevar.net"
    },
    {
      "name": "Christoph Burgmer"
    }
  ],
  "dependencies": {
    "immediate": "~3.0.5"
  },
  "description": "A basic but performant promise implementation",
  "devDependencies": {
    "browserify": "^13.0.0",
    "browserify-transform-cli": "^1.1.1",
    "bundle-collapser": "^1.2.1",
    "copyfiles": "^1.0.0",
    "derequire": "^1.2.0",
    "es3ify": "^0.2.2",
    "inline-process-browser": "^1.0.0",
    "istanbul": "^0.2.6",
    "jshint": "^2.4.4",
    "mkdirp": "^0.5.1",
    "mocha": "^1.18.0",
    "mocha-phantomjs": "~3.5.0",
    "phantomjs": "^1.9.9",
    "promises-aplus-tests": "github:calvinmetcalf/promises-tests#phantom",
    "rimraf": "^2.5.4",
    "typescript": "^2.7.1",
    "uglify-js": "^2.4.13",
    "unreachable-branch-transform": "^0.3.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==",
    "shasum": "dcf82dee545f46074daf200c7c1c5a08e0f40f6a",
    "tarball": "https://registry.npmjs.org/lie/-/lie-3.3.0.tgz",
    "fileCount": 11,
    "unpackedSize": 59145
  },
  "files": [
    "lib",
    "dist",
    "polyfill.js",
    "lie.d.ts"
  ],
  "gitHead": "fa42cdf72817a963186538d8f8a32c8c1dea6e14",
  "homepage": "https://github.com/calvinmetcalf/lie#readme",
  "keywords": [
    "lie",
    "promise",
    "async",
    "aplus"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "name": "lie",
  "optionalDependencies": {},
  "readme": "# lie\n<a href=\"http://promises-aplus.github.com/promises-spec\">\n  <img src=\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\"\n       alt=\"Promises/A+ logo\" title=\"Promises/A+ 1.1 compliant\" align=\"right\" />\n</a> [![Build Status](https://travis-ci.org/calvinmetcalf/lie.svg)](https://travis-ci.org/calvinmetcalf/lie)\n\nlie is a small, performant promise library implementing the [Promises/A+ spec](http://promises-aplus.github.com/promises-spec/) (Version 1.1).\n\nOriginally a fork of [Ruben Verborgh](https://github.com/RubenVerborgh)'s [promiscuous](https://github.com/RubenVerborgh/promiscuous), with version 2.6 it became a fork of [ayepromise](https://github.com/cburgmer/ayepromise) by [Chris Burgmer](https://github.com/cburgmer).\n\n```bash\nnpm install lie\n\n```\n\n```javascript\nvar Promise = require('lie');\n// or use the pollyfill\nrequire('lie/polyfill');\n```\n\n## Usage\n\nEither use it with [browserify](http://browserify.org/) (recommended) or grab one of the files from the dist folder:\n\n- lie.js/lie.min.js exposes 'Promise' either as a UMD module or from the global scope, depending on if a CJS or AMD loader is available.\n- lie.polyfill.js/lie.polyfill.min.js adds 'Promise' to the global scope only if it's not already defined (not a UMD).\n\n## API\n\nImplements the standard ES6 api:\n\n```js\nnew Promise(function(resolve, reject){\n    doSomething(function(err, result) {\n        if (err) {\n            reject(err);\n        } else {\n            resolve(result);\n        }\n    });\n}).then(function (value) {\n    //on success\n}, function (reason) {\n    //on error\n}).catch(function (reason) {\n    //shortcut for error handling\n});\n\nPromise.all([\n    //array of promises or values\n]).then(function ([/* array of results */]));\n\nPromise.race([\n    //array of promises or values\n]);\n// either resolves or rejects depending on the first value to do so\n```\n\n## Unhandled Rejections\n\nIn Node.js, lie emits an `unhandledRejection` event when a rejected promise isn't caught, in line with [how io.js does it](https://iojs.org/api/process.html#process_event_unhandledrejection). This allows it to act as a promise shim in both Node.js and the browser.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/calvinmetcalf/lie.git"
  },
  "scripts": {
    "browser": "browserify test/cover.js > test/browser.js && mocha-phantomjs test/test.html",
    "build": "npm run build-node && npm run build-js && npm run build-min && npm run build-poly",
    "build-js": "browserify -s Promise -p bundle-collapser/plugin . | derequire > ./dist/lie.js",
    "build-min": "uglifyjs ./dist/lie.js -mc > ./dist/lie.min.js",
    "build-node": "copyfiles -f src/index.js lib && browserify-transform-cli inline-process-browser unreachable-branch-transform es3ify < src/index.js > lib/browser.js",
    "build-poly": "npm run build-poly-js && npm run build-poly-min",
    "build-poly-js": "browserify -p bundle-collapser/plugin ./polyfill.js | derequire > ./dist/lie.polyfill.js",
    "build-poly-min": "uglifyjs ./dist/lie.polyfill.js -mc > ./dist/lie.polyfill.min.js",
    "cover": "istanbul cover _mocha ./test/cover.js -- -R spec && istanbul check-coverage --lines 100 --function 100 --statements 100 --branches 100",
    "jshint": "jshint src",
    "node": "mocha -R spec ./test/cover.js",
    "prebuild": "rimraf lib dist && mkdirp lib dist",
    "pretest": "npm run build",
    "test": "npm run jshint && mocha -R nyan ./test/cover.js && tsc --noEmit ./test/types.ts"
  },
  "types": "lie.d.ts",
  "version": "3.3.0"
}
